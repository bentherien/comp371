// ambient, diffuse and specular light formulas taken from https://learnopengl.com/Lighting/Basic-Lighting

#version 440
out vec4 FragColor;

in vec3 Normal;
in vec3 FragPos;

uniform vec3 modelColor;
uniform vec3 lightColor;
uniform vec3 lightPos;
uniform vec3 viewPos; 

// Phong lighting is a combination of ambient, diffuse, and specular

void main()
{
	// ambient light
	float ambientStrength = 0.3;
	vec3 ambient = ambientStrength * lightColor;

	// diffuse light
	vec3 norm = normalize(Normal);
	vec3 lightDir = normalize(lightPos - FragPos);
	float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * lightColor;

	// specular
	float specularStrength = 0.5;
	vec3 viewDir = normalize(viewPos - FragPos);
    vec3 reflectDir = reflect(-lightDir, norm);  
    float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
    vec3 specular = specularStrength * spec * lightColor;  

	vec3 result = (ambient + diffuse + specular) * modelColor;
	FragColor = vec4(result, 1.0f);
}